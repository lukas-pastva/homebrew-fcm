#!/bin/bash

check_docker_login() {
    if [ ! -f "$HOME/.docker/config.json" ] || ! grep -q '"registry.gitlab.com"' "$HOME/.docker/config.json"; then
        echo "You are not logged in to registry.gitlab.com/fatchilli. Logging You in."
        echo $GL_TOKEN | docker login registry.gitlab.com/fatchilli --username fcm --password-stdin
    fi
}

check_docker() {
    if ! command -v docker &> /dev/null; then
        echo "Docker is not installed."

        # Ask the user if they want to install Docker
        read -p "Do you want to install Docker? (Y/n) " answer

        # Convert the answer to lowercase
        answer=$(echo "$answer" | tr '[:upper:]' '[:lower:]')

        # Check if the answer is 'y' or 'yes'
        if [[ "$answer" == "y" || "$answer" == "yes" ]]; then
            echo "Installing Docker..."

            # Use curl to download and run the installation script from get.docker.com
            curl -fsSL https://get.docker.com -o get-docker.sh
            sh get-docker.sh

            echo "Docker has been installed."
        else
            echo "Docker installation skipped. Please install Docker manually and try again."
            exit 1
        fi
    fi
}


install(){
    read -p "Please input working directory (default is ~/Desktop): " input
    WORKDIR=${input:-~/Desktop}

    read -sp "Enter GitLab Token: " GL_TOKEN
    export GL_TOKEN

    check_docker_login

    echo ""
    echo "Starting fcm container, please wait..."
    docker stop fcm >/dev/null 2>&1 || true
    docker container rm fcm >/dev/null 2>&1 || true
    docker image rm registry.gitlab.com/fatchilli/devops/fcm/fcm:latest >/dev/null 2>&1 || true
    mkdir -p $WORKDIR/fcm
    docker run --name fcm -d --restart=unless-stopped \
    -e GL_TOKEN=${GL_TOKEN} \
    -e WORKDIR=$WORKDIR \
    -v /var/run/docker.sock:/var/run/docker.sock \
    -v $WORKDIR/fcm:$WORKDIR/fcm \
    -v /etc/hosts:/etc/hosts:rw \
    --privileged \
    registry.gitlab.com/fatchilli/devops/fcm/fcm:latest >/dev/null 2>&1

}

ensure_running() {
    check_docker
    if ! docker ps --format '{{.Names}}' | grep -q '^fcm$'; then
        install
    fi
}

# The main command handler
function main() {
    case "$1" in
        restart)
            echo "Reinstalling fcm container..."
            ensure_running
            ;;
        *)
            ensure_running
            docker exec -i fcm fcm "$@"
            ;;
    esac
}

# Check if at least one argument is provided
if [ $# -lt 1 ]; then
    ensure_running
    docker exec -i fcm fcm help
    exit 1
fi

# Run the main function with all script arguments
main "$@"
